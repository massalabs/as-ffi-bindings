var searchIndex = JSON.parse('{\
"as_ffi_bindings":{"doc":"The current module give a free access to an helper. With …","t":"NDDNDDENINDEIFKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLL","n":["Any","AnyPtr","AnyPtrExported","Buffer","BufferPtr","Env","Error","Mem","Read","String","StringPtr","Type","Write","abort","alloc","alloc","alloc","alloc","as_error","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","content","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","empty_array","empty_array","empty_array","export","fmt","fmt","fn_collect","fn_new","fn_pin","fn_unpin","free","free","free","free","from","from","from","from","from","from","from","from_array","from_array","from_array","from_c_struct","from_c_struct","from_c_struct","from_native","from_native","from_native","from_slice","from_slice","from_slice","id","import","init","init","init","init","init","init","init","init_with","into","into","into","into","into","into","into","into_array","into_array","into_array","into_c_struct","into_c_struct","into_c_struct","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","memory","new","new","new","offset","offset","offset","offset","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","provide","read","read","read","read","serialize","size","size","size","size","size","size","size","to_native","to_native","to_native","to_owned","to_owned","to_owned","to_owned","to_string","to_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","wasm_types","wasm_types","wasm_types","write","write","write","write","write_c_struct_to_ptr","write_c_struct_to_ptr","write_c_struct_to_ptr"],"q":[[0,"as_ffi_bindings"]],"d":["","","","","","","","","","","","","","","Try to write in the given environment a new value thanks …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpin the pointer","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Create a new pointer with an allocation and write the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Get ptr stored offset","","","","","","","","","","","Read the value contained in the given memory at the …","","","","","Read the size as indicated in the AssemblyScript object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to write in the given environment a value. If the size …","","","","","",""],"i":[27,0,0,27,0,0,0,22,0,27,0,0,0,0,39,12,13,3,22,18,27,12,13,1,3,22,18,27,12,13,1,3,22,12,13,1,3,12,13,1,3,18,1,18,27,12,13,1,3,22,18,27,12,13,1,3,22,18,18,27,12,13,1,3,22,18,27,12,13,1,3,22,12,13,3,12,22,22,1,1,1,1,39,12,13,3,18,27,12,13,1,3,22,12,13,3,12,13,3,12,13,3,12,13,3,18,12,18,27,12,13,1,3,22,1,18,27,12,13,1,3,22,12,13,3,12,13,3,18,27,12,13,1,3,22,1,12,13,3,27,12,13,3,18,27,12,13,1,3,22,22,40,12,13,3,18,40,12,12,13,13,3,3,12,13,3,12,13,1,3,22,12,18,27,12,13,1,3,22,18,27,12,13,1,3,22,18,27,12,13,1,3,22,18,1,22,18,1,22,18,1,22,12,13,3,39,12,13,3,12,13,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3,4,4],[[6,[5]]]],[[1,7],[[9,[8]]]],[[[11,[10]],1,7],[[9,[[8,[12]]]]]],[[[11,[10]],1,7],[[9,[[8,[13]]]]]],[[14,1,7],[[9,[[8,[3]]]]]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[13,13],[1,1],[3,3],[[]],[[]],[[]],[[]],0,[[],1],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[[17,[10]]],[[9,[18]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[[],[[6,[19]]]],[16],[16],[16],[16],[16],[16],[16],[[]],[[]],[[]],[[12,20,21],[[9,[18]]]],[[22,23],24],[[22,23],24],0,0,0,0,[[1,21],9],[[12,1,21],9],[[13,1,21],9],[[3,1,21],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[],12],[[],13],[[],3],[[7,[17,[25]]],[[6,[26]]]],[[7,[17,[25]]],[[6,[26]]]],[[7,[17,[25]]],[[6,[26]]]],0,[[18,1,20,21],[[9,[27]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1,[28,[20]],[28,[[30,[29]]]],[28,[[30,[29,29]]]],[28,[[30,[29]]]],[28,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],[[],[[6,[31,32]]]],0,[4,12],[4,13],[4,3],[27,4],[12,4],[13,4],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33],[[20,34],9],[[12,20,34],[[9,[[11,[10]]]]]],[[13,20,34],[[9,[[11,[10]]]]]],[[3,20,34],[[9,[14]]]],[18,[[11,[10]]]],[[20,34],[[9,[4]]]],[[],4],[[12,20,34],[[9,[4]]]],[[],4],[[13,20,34],[[9,[4]]]],[[],4],[[3,20,34],[[9,[4]]]],[12],[13],[3],[[]],[[]],[[]],[[]],[[],14],[[12,20,21],[[9,[27]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[[8,[36]]],[[8,[37,36]]]],[[[8,[36]]],[[8,[37,36]]]],[[[8,[36]]],[[8,[37,36]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],[[17,[38]]]],[[],[[17,[38]]]],[[],[[17,[38]]]],[[1,7],[[9,[8]]]],[[12,[11,[10]],1,7],[[9,[[8,[12]]]]]],[[13,[11,[10]],1,7],[[9,[[8,[13]]]]]],[[3,14,1,7],[[9,[[8,[3]]]]]],[25],[25],[25]],"c":[],"p":[[3,"Env"],[3,"FunctionEnvMut"],[3,"StringPtr"],[15,"u32"],[3,"RuntimeError"],[4,"Result"],[8,"AsStoreMut"],[3,"Box"],[6,"Result"],[15,"u8"],[3,"Vec"],[3,"AnyPtr"],[3,"BufferPtr"],[3,"String"],[8,"Error"],[15,"usize"],[15,"slice"],[3,"AnyPtrExported"],[3,"With"],[3,"Memory"],[3,"Store"],[4,"Error"],[3,"Formatter"],[6,"Result"],[19,"RawValue"],[3,"TryFromSliceError"],[4,"Type"],[4,"Option"],[15,"i32"],[3,"TypedFunction"],[3,"Layout"],[3,"LayoutError"],[3,"Demand"],[8,"AsStoreRef"],[3,"TypeId"],[3,"Global"],[8,"Any"],[4,"Type"],[8,"Write"],[8,"Read"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
