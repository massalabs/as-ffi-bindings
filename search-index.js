var searchIndex = JSON.parse('{\
"as_ffi_bindings":{"doc":"The current module give a free access to an helper. With …","t":[13,3,3,13,3,3,4,13,8,13,3,4,8,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11],"n":["Any","AnyPtr","AnyPtrExported","Buffer","BufferPtr","Env","Error","Mem","Read","String","StringPtr","Type","Write","abort","alloc","alloc","alloc","alloc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","content","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","empty_array","empty_array","empty_array","export","fmt","fmt","fn_collect","fn_new","fn_pin","fn_unpin","free","free","free","free","from","from","from","from","from","from","from","from_array","from_array","from_array","from_c_struct","from_c_struct","from_c_struct","from_native","from_native","from_native","from_slice","from_slice","from_slice","id","import","init","init","init","init","init","init","init","init_with","into","into","into","into","into","into","into","into_array","into_array","into_array","into_c_struct","into_c_struct","into_c_struct","memory","new","new","new","offset","offset","offset","offset","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","provide","read","read","read","read","serialize","size","size","size","size","to_native","to_native","to_native","to_owned","to_owned","to_owned","to_owned","to_string","to_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","wasm_types","wasm_types","wasm_types","write","write","write","write","write_c_struct_to_ptr","write_c_struct_to_ptr","write_c_struct_to_ptr"],"q":["as_ffi_bindingsd":["","","","","","","","","","","","","","","Try to write in the given environment a new value thanks …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpin the pointer","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Create a new pointer with an allocation and write the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Get ptr stored offset","","","","","","","","","","","Read the value contained in the given memory at the …","","","","","Read the size as indicated in the AssemblyScript object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to write in the given environment a value. If the size …","","","","","",""],"i":[22,0,0,22,0,0,0,18,0,22,0,0,0,0,32,10,11,3,14,22,10,11,1,3,18,14,22,10,11,1,3,18,10,11,1,3,10,11,1,3,14,1,14,22,10,11,1,3,18,14,22,10,11,1,3,18,14,14,22,10,11,1,3,18,14,22,10,11,1,3,18,10,11,3,10,18,18,1,1,1,1,32,10,11,3,14,22,10,11,1,3,18,10,11,3,10,11,3,10,11,3,10,11,3,14,10,14,22,10,11,1,3,18,1,14,22,10,11,1,3,18,10,11,3,10,11,3,1,10,11,3,22,10,11,3,14,22,10,11,1,3,18,18,33,10,11,3,14,33,10,11,3,10,11,3,10,11,1,3,18,10,14,22,10,11,1,3,18,14,22,10,11,1,3,18,14,22,10,11,1,3,18,14,1,18,14,1,18,14,1,18,10,11,3,32,10,11,3,10,11,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3,4,4],[[6,[5]]]],[1,[[8,[7]]]],[[9,1],[[8,[[7,[10]]]]]],[[9,1],[[8,[[7,[11]]]]]],[[12,1],[[8,[[7,[3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[11,11],[1,1],[3,3],[[]],[[]],[[]],[[]],0,[[],1],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[],[[8,[14]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[[],[[6,[15]]]],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[10,16,17],[[8,[14]]]],[[18,19],20],[[18,19],20],0,0,0,0,[[1,17],8],[[10,1,17],8],[[11,1,17],8],[[3,1,17],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],11],[[],3],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],0,[[14,1,16,17],[[8,[22]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[1,[23,[16]],[23,[[25,[24]]]],[23,[[25,[24,24]]]],[23,[[25,[24]]]],[23,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,10],[4,11],[4,3],[22,4],[10,4],[11,4],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[16,8],[[10,16],[[8,[[9,[27]]]]]],[[11,16],[[8,[[9,[27]]]]]],[[3,16],[[8,[12]]]],[14,[[9,[27]]]],[16,[[8,[4]]]],[[10,16],[[8,[4]]]],[[11,16],[[8,[4]]]],[[3,16],[[8,[4]]]],[10],[11],[3],[[]],[[]],[[]],[[]],[[],12],[[10,16,17],[[8,[22]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[[7,[29]]],[[7,[30,29]]]],[[[7,[29]]],[[7,[30,29]]]],[[[7,[29]]],[[7,[30,29]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[1,[[8,[7]]]],[[10,9,1],[[8,[[7,[10]]]]]],[[11,9,1],[[8,[[7,[11]]]]]],[[3,12,1],[[8,[[7,[3]]]]]],[31],[31],[31]],"p":[[3,"Env"],[3,"FunctionEnvMut"],[3,"StringPtr"],[15,"u32"],[3,"RuntimeError"],[4,"Result"],[3,"Box"],[6,"Result"],[3,"Vec"],[3,"AnyPtr"],[3,"BufferPtr"],[3,"String"],[15,"usize"],[3,"AnyPtrExported"],[3,"With"],[3,"Memory"],[3,"Store"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"TryFromSliceError"],[4,"Type"],[4,"Option"],[15,"i32"],[3,"TypedFunction"],[3,"Demand"],[15,"u8"],[3,"TypeId"],[3,"Global"],[8,"Any"],[19,"RawValue"],[8,"Write"],[8,"Read"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
